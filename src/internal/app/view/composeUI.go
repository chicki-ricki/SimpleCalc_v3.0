package view

import (
	"fyne.io/fyne/v2"
	"fyne.io/fyne/v2/container"
	"fyne.io/fyne/v2/layout"
	"fyne.io/fyne/v2/widget"
)

func (c *calcView) createGraphInterface() *fyne.Container {
	graphContainer := container.NewGridWithColumns(1,
		container.NewGridWithColumns(1, c.output),
		container.NewGridWithColumns(2,
			container.NewGridWithColumns(3,
				c.textButtonEqual("X", "x"),
				c.labels["equalLabel"],
				layout.NewSpacer()),
			container.NewGridWithColumns(1,
				c.outputEqual)),
		container.NewGridWithColumns(3,
			c.labels["xLabel"],
			c.entrys["xFrom"],
			c.entrys["xTo"]),
		container.NewGridWithColumns(3,
			c.labels["yLabel"],
			c.entrys["yFrom"],
			c.entrys["yTo"]),
		container.NewGridWithColumns(6,
			c.textButtonEqual("cos(x)", "cos("),
			c.textButtonEqual("acos(x)", "acos("),
			c.addButton("C", c.clearEqual),
			c.charButtonEqual('('),
			c.charButtonEqual(')'),
			c.charButtonEqual('/')),
		container.NewGridWithColumns(6,
			c.textButtonEqual("sin(x)", "sin("),
			c.textButtonEqual("asin(x)", "asin("),
			c.digitButtonEqual(7),
			c.digitButtonEqual(8),
			c.digitButtonEqual(9),
			c.charButtonEqual('*')),
		container.NewGridWithColumns(6,
			c.textButtonEqual("tan(x)", "tan("),
			c.textButtonEqual("atan(x)", "atan("),
			c.digitButtonEqual(4),
			c.digitButtonEqual(5),
			c.digitButtonEqual(6),
			c.charButtonEqual('-')),
		container.NewGridWithColumns(6,
			c.textButtonEqual("ln(x)", "ln("),
			c.textButtonEqual("log(x)", "log("),
			c.digitButtonEqual(1),
			c.digitButtonEqual(2),
			c.digitButtonEqual(3),
			c.charButtonEqual('+')),
		container.NewGridWithColumns(6,
			c.textButtonEqual("sqrt(x)", "sqrt("),
			c.textButtonEqual("mod", "mod"),
			c.digitButtonEqual(0),
			c.charButtonEqual('.'),
			c.textButtonEqual("^()", "^("),
			c.buttons["="]),
		container.NewGridWithColumns(2,
			c.buttons["history"],
			c.buttons["graph"]))
	return graphContainer
}

func (c *calcView) createEqualInterface() *fyne.Container {
	equalContainer := container.NewGridWithColumns(1,
		c.output,
		container.NewGridWithColumns(2,
			container.NewGridWithColumns(3,
				c.textButtonEqual("X", "x"),
				c.entrys["xEqual"],
				c.labels["equalLabel"]),
			container.NewGridWithColumns(1,
				c.outputEqual)),
		container.NewGridWithColumns(6,
			c.textButtonEqual("cos(x)", "cos("),
			c.textButtonEqual("acos(x)", "acos("),
			c.addButtonEqual("C", c.clearEqual),
			c.charButtonEqual('('),
			c.charButtonEqual(')'),
			c.charButtonEqual('/')),
		container.NewGridWithColumns(6,
			c.textButtonEqual("sin(x)", "sin("),
			c.textButtonEqual("asin(x)", "asin("),
			c.digitButtonEqual(7),
			c.digitButtonEqual(8),
			c.digitButtonEqual(9),
			c.charButtonEqual('*')),
		container.NewGridWithColumns(6,
			c.textButtonEqual("tan(x)", "tan("),
			c.textButtonEqual("atan(x)", "atan("),
			c.digitButtonEqual(4),
			c.digitButtonEqual(5),
			c.digitButtonEqual(6),
			c.charButtonEqual('-')),
		container.NewGridWithColumns(6,
			c.textButtonEqual("ln(x)", "ln("),
			c.textButtonEqual("log(x)", "log("),
			c.digitButtonEqual(1),
			c.digitButtonEqual(2),
			c.digitButtonEqual(3),
			c.charButtonEqual('+')),
		container.NewGridWithColumns(3,
			container.NewGridWithColumns(2,
				c.textButtonEqual("sqrt(x)", "sqrt("),
				c.textButtonEqual("mod", "mod")),
			container.NewGridWithColumns(2,
				c.digitButtonEqual(0),
				c.charButtonEqual('.')),
			container.NewGridWithColumns(2,
				c.textButtonEqual("^()", "^("),
				c.buttons["="])),
		container.NewGridWithColumns(2,
			widget.NewButton("History list (H)", c.historyViewHide),
			widget.NewButton("Graph window (G)", c.graphViewHide)))
	return equalContainer
}

func (c *calcView) createCalcInterface() *fyne.Container {
	calcContainer := container.NewGridWithColumns(1,
		c.output,
		container.NewGridWithColumns(6,
			c.textButton("cos(x)", "cos("),
			c.textButton("acos(x)", "acos("),
			c.addButton("C", c.clear),
			c.charButton('('),
			c.charButton(')'),
			c.charButton('/')),
		container.NewGridWithColumns(6,
			c.textButton("sin(x)", "sin("),
			c.textButton("asin(x)", "asin("),
			c.digitButton(7),
			c.digitButton(8),
			c.digitButton(9),
			c.charButton('*')),
		container.NewGridWithColumns(6,
			c.textButton("tan(x)", "tan("),
			c.textButton("atan(x)", "atan("),
			c.digitButton(4),
			c.digitButton(5),
			c.digitButton(6),
			c.charButton('-')),
		container.NewGridWithColumns(6,
			c.textButton("ln(x)", "ln("),
			c.textButton("log(x)", "log("),
			c.digitButton(1),
			c.digitButton(2),
			c.digitButton(3),
			c.charButton('+')),
		container.NewGridWithColumns(3,
			container.NewGridWithColumns(2,
				c.textButton("sqrt(x)", "sqrt("),
				c.textButton("mod", "mod")),
			container.NewGridWithColumns(2,
				c.digitButton(0),
				c.charButton('.')),
			container.NewGridWithColumns(2,
				c.textButton("^()", "^("),
				c.buttons["="])),
		container.NewGridWithColumns(2,
			c.buttons["history"],
			c.buttons["graph"]))
	return calcContainer
}
